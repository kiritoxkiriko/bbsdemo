<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wxm.bbsdemo.mapper.PostreplyCommentMapper">
  <resultMap id="BaseResultMap" type="com.wxm.bbsdemo.entity.PostreplyComment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="postreply_comment_id" jdbcType="BIGINT" property="postreplyCommentId" />
    <result column="postreply_id" jdbcType="BIGINT" property="postreplyId" />
    <result column="commentby_id" jdbcType="BIGINT" property="commentbyId" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="commentdate" jdbcType="TIMESTAMP" property="commentdate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    postreply_comment_id, postreply_id, commentby_id, comment, commentdate
  </sql>
  <select id="selectByExample" parameterType="com.wxm.bbsdemo.entity.PostreplyCommentExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from postreply_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from postreply_comment
    where postreply_comment_id = #{postreplyCommentId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from postreply_comment
    where postreply_comment_id = #{postreplyCommentId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.wxm.bbsdemo.entity.PostreplyCommentExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from postreply_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="postreply_comment_id" keyProperty="postreplyCommentId" parameterType="com.wxm.bbsdemo.entity.PostreplyComment" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into postreply_comment (postreply_id, commentby_id, comment, 
      commentdate)
    values (#{postreplyId,jdbcType=BIGINT}, #{commentbyId,jdbcType=BIGINT}, #{comment,jdbcType=VARCHAR}, 
      #{commentdate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="postreply_comment_id" keyProperty="postreplyCommentId" parameterType="com.wxm.bbsdemo.entity.PostreplyComment" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into postreply_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="postreplyId != null">
        postreply_id,
      </if>
      <if test="commentbyId != null">
        commentby_id,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="commentdate != null">
        commentdate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="postreplyId != null">
        #{postreplyId,jdbcType=BIGINT},
      </if>
      <if test="commentbyId != null">
        #{commentbyId,jdbcType=BIGINT},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="commentdate != null">
        #{commentdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wxm.bbsdemo.entity.PostreplyCommentExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from postreply_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update postreply_comment
    <set>
      <if test="record.postreplyCommentId != null">
        postreply_comment_id = #{record.postreplyCommentId,jdbcType=BIGINT},
      </if>
      <if test="record.postreplyId != null">
        postreply_id = #{record.postreplyId,jdbcType=BIGINT},
      </if>
      <if test="record.commentbyId != null">
        commentby_id = #{record.commentbyId,jdbcType=BIGINT},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.commentdate != null">
        commentdate = #{record.commentdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update postreply_comment
    set postreply_comment_id = #{record.postreplyCommentId,jdbcType=BIGINT},
      postreply_id = #{record.postreplyId,jdbcType=BIGINT},
      commentby_id = #{record.commentbyId,jdbcType=BIGINT},
      comment = #{record.comment,jdbcType=VARCHAR},
      commentdate = #{record.commentdate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wxm.bbsdemo.entity.PostreplyComment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update postreply_comment
    <set>
      <if test="postreplyId != null">
        postreply_id = #{postreplyId,jdbcType=BIGINT},
      </if>
      <if test="commentbyId != null">
        commentby_id = #{commentbyId,jdbcType=BIGINT},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="commentdate != null">
        commentdate = #{commentdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where postreply_comment_id = #{postreplyCommentId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wxm.bbsdemo.entity.PostreplyComment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update postreply_comment
    set postreply_id = #{postreplyId,jdbcType=BIGINT},
      commentby_id = #{commentbyId,jdbcType=BIGINT},
      comment = #{comment,jdbcType=VARCHAR},
      commentdate = #{commentdate,jdbcType=TIMESTAMP}
    where postreply_comment_id = #{postreplyCommentId,jdbcType=BIGINT}
  </update>
</mapper>